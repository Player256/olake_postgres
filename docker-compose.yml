
services:
  nessie:
    image: ghcr.io/projectnessie/nessie:latest
    container_name: nessie
    ports:
      - "19120:19120"
    environment:
      - nessie.version.store.type=JDBC
      - quarkus.datasource.db-kind=postgresql
      - quarkus.datasource.jdbc.url=jdbc:postgresql://postgres:5432/nessie_db
      - quarkus.datasource.username=nessie
      - quarkus.datasource.password=nessie
      - nessie.catalog.default-warehouse=warehouse
      - nessie.catalog.warehouses.warehouse.location=s3://warehouse/
      - nessie.catalog.service.s3.default-options.region=us-east-1
      - nessie.catalog.service.s3.default-options.path-style-access=true
      - nessie.catalog.service.s3.default-options.endpoint=http://minio:9000/
      - nessie.catalog.service.s3.default-options.external-endpoint=http://host.docker.internal:9000/
      - nessie.catalog.service.s3.default-options.access-key=urn:nessie-secret:quarkus:nessie.catalog.secrets.access-key
      - nessie.catalog.secrets.access-key.name=minio
      - nessie.catalog.secrets.access-key.secret=minio123
    depends_on:
      postgres:
        condition: service_healthy
      mc:
        condition: service_completed_successfully
    networks:
      - net

  minio:
    image: quay.io/minio/minio:RELEASE.2025-07-18T21-56-31Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ADDRESS: ":9000"
      MINIO_CONSOLE_ADDRESS: ":9090"
    volumes:
      - minio-data:/data
    command: server /data
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 15

  mc:
    image: quay.io/minio/minio:RELEASE.2025-07-18T21-56-31Z
    container_name: mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: /bin/bash
    restart: "no"
    command: >
      -c "mc alias set myminio http://minio:9000/ minio minio123 && 
           mc mb myminio/warehouse --ignore-existing"
    networks:
      - net

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: nessie
      POSTGRES_PASSWORD: nessie
      POSTGRES_DB: nessie_db
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/data
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nessie"]
      interval: 5s
      timeout: 2s
      retries: 10
  
    spark:
      image: tabulario/spark-iceberg:latest
      container_name: spark
      networks:
        - net
      depends_on:
        - minio
      environment:
        - SPARK_PACKAGES=org.apache.iceberg:iceberg-spark-runtime-3.2_2.12:1.1.0
        - "SPARK_SUBMIT_OPTIONS=\
            --packages org.apache.iceberg:iceberg-spark-runtime-3.2_2.12:1.1.0 \
            --conf spark.sql.catalog.my_catalog=org.apache.iceberg.spark.SparkCatalog \
            --conf spark.sql.catalog.my_catalog.catalog-impl=org.apache.iceberg.rest.RESTCatalog \
            --conf spark.sql.catalog.my_catalog.uri=http://iceberg-rest:8181 \
            --conf spark.sql.catalog.my_catalog.warehouse=s3://warehouse/ \
            --conf spark.sql.catalog.my_catalog.io-impl=org.apache.iceberg.aws.s3.S3FileIO \
            --conf spark.sql.catalog.my_catalog.s3.endpoint=http://minio:9090"
      entrypoint: ["/bin/sh", "-c", "tail -f /dev/null"]


volumes:
  minio-data:
  postgres-data:

networks:
  net:
    driver: bridge